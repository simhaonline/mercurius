// Code generated by go generate; DO NOT EDIT.
// This file was generated by github.com/golangee/i18n

package setup

import (
	"fmt"
	i18n "github.com/golangee/i18n"
)

func init() {
	var tag string

	// from strings.xml
	tag = "und"

	i18n.ImportValue(i18n.NewText(tag, "btn_accept", "accept"))
	i18n.ImportValue(i18n.NewText(tag, "btn_next", "next"))
	i18n.ImportValue(i18n.NewText(tag, "setup_license", "worldiety Enterprise Edition (EE) License (the \"EE License\")\n        Copyright (c) 2020 worldiety GmbH\n\n        This software and the associated documentation may only be used if you or the natural\n        or legal entity you represent, have a corresponding individual agreement with the worldiety GmbH\n        about the use of this software. Unless otherwise agreed, you have, after the completion of all outstanding payments,\n        a non-exclusive, worldwide, perpetual and irrevocable right to use the software. In addition, you are granted\n        permission, in accordance with the agreements made, to use the software and publish patches for the software.\n        In doing so, you agree that worldiety receives an exclusive, worldwide, unlimited and irrevocable right of use of\n        the modifications. This also applies in particular to commissioned modifications, which are carried out by third\n        parties or by worldiety within the scope of service or contracts for work and services arise.\n\n        You are not permitted to copy, merge or combine this software as an independent product,\n        to publish, distribute, sublicense or sell Deviating from this. Unaffected is your permission to copy, distribute,\n        sublicense or sell this software as auxiliary or accessory of your software product.\n\n        Used components of third parties, which are integrated into the worldiety software, remain under the respective\n        Original license of the respective licensor."))
	i18n.ImportValue(i18n.NewText(tag, "setup_title_license", "license"))
	i18n.ImportValue(i18n.NewText(tag, "setup_title_welcome", "welcome to mercurius"))
	i18n.ImportValue(i18n.NewText(tag, "setup_welcome", "Welcome to the setup wizard for the login service.\n        In The following steps the basic configurations for the service are carried out.\n\n        After you have accepted the license agreements and made the necessary\n        configurations, the wizard initializes and starts the login service for your\n        environment.\n\n        After completion, it is possible to create users with different clients and\n        initialize sessions for them.\n\n        You can retun to the previous steps at any time to make adjustments to your settings.\n    "))
	_ = tag

}

// Resources wraps the package strings to get invoked safely.
type Resources struct {
	res *i18n.Resources
}

// NewResources creates a new localized resource instance.
func NewResources(locale string) Resources {
	return Resources{i18n.From(locale)}
}

// BtnAccept returns a translated text for "accept"
func (r Resources) BtnAccept() string {
	str, err := r.res.Text("btn_accept")
	if err != nil {
		return fmt.Errorf("MISS!btn_accept: %w", err).Error()
	}
	return str
}

// BtnNext returns a translated text for "next"
func (r Resources) BtnNext() string {
	str, err := r.res.Text("btn_next")
	if err != nil {
		return fmt.Errorf("MISS!btn_next: %w", err).Error()
	}
	return str
}

/*
SetupLicense returns a translated text for "worldiety Enterprise Edition (EE) License (the "EE License")
        Copyright (c) 2020 worldiety GmbH

        This software and the associated documentation may only be used if you or the natural
        or legal entity you represent, have a corresponding individual agreement with the worldiety GmbH
        about the use of this software. Unless otherwise agreed, you have, after the completion of all outstanding payments,
        a non-exclusive, worldwide, perpetual and irrevocable right to use the software. In addition, you are granted
        permission, in accordance with the agreements made, to use the software and publish patches for the software.
        In doing so, you agree that worldiety receives an exclusive, worldwide, unlimited and irrevocable right of use of
        the modifications. This also applies in particular to commissioned modifications, which are carried out by third
        parties or by worldiety within the scope of service or contracts for work and services arise.

        You are not permitted to copy, merge or combine this software as an independent product,
        to publish, distribute, sublicense or sell Deviating from this. Unaffected is your permission to copy, distribute,
        sublicense or sell this software as auxiliary or accessory of your software product.

        Used components of third parties, which are integrated into the worldiety software, remain under the respective
        Original license of the respective licensor."
*/
func (r Resources) SetupLicense() string {
	str, err := r.res.Text("setup_license")
	if err != nil {
		return fmt.Errorf("MISS!setup_license: %w", err).Error()
	}
	return str
}

// SetupTitleLicense returns a translated text for "license"
func (r Resources) SetupTitleLicense() string {
	str, err := r.res.Text("setup_title_license")
	if err != nil {
		return fmt.Errorf("MISS!setup_title_license: %w", err).Error()
	}
	return str
}

// SetupTitleWelcome returns a translated text for "welcome to mercurius"
func (r Resources) SetupTitleWelcome() string {
	str, err := r.res.Text("setup_title_welcome")
	if err != nil {
		return fmt.Errorf("MISS!setup_title_welcome: %w", err).Error()
	}
	return str
}

/*
SetupWelcome returns a translated text for "Welcome to the setup wizard for the login service.
        In The following steps the basic configurations for the service are carried out.

        After you have accepted the license agreements and made the necessary
        configurations, the wizard initializes and starts the login service for your
        environment.

        After completion, it is possible to create users with different clients and
        initialize sessions for them.

        You can retun to the previous steps at any time to make adjustments to your settings.
    "
*/
func (r Resources) SetupWelcome() string {
	str, err := r.res.Text("setup_welcome")
	if err != nil {
		return fmt.Errorf("MISS!setup_welcome: %w", err).Error()
	}
	return str
}

// FuncMap returns the named functions to be used with a template
func (r Resources) FuncMap() map[string]interface{} {
	m := make(map[string]interface{})
	m["BtnAccept"] = r.BtnAccept
	m["BtnNext"] = r.BtnNext
	m["SetupLicense"] = r.SetupLicense
	m["SetupTitleLicense"] = r.SetupTitleLicense
	m["SetupTitleWelcome"] = r.SetupTitleWelcome
	m["SetupWelcome"] = r.SetupWelcome
	return m
}
