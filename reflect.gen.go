// Code generated by reflectplus. DO NOT EDIT.

package mercurius

import (
	context "context"
	base64 "encoding/base64"
	reflectplus "github.com/golangee/reflectplus"
	uuid "github.com/golangee/uuid"
	build "github.com/worldiety/mercurius/build"
	sms "github.com/worldiety/mercurius/service/sms"
	reflect "reflect"
)

func init() {
	reflectplus.AddProxyFactory("github.com/worldiety/mercurius/service/sms", "Repository", func(h reflectplus.InvocationHandler) interface{} {
		return GithubcomWorldietyMercuriusServiceSmsRepositoryProxy{Handler: h}
	})
	if _, err := reflectplus.ImportMetaData(metaData); err != nil {
		panic(err)
	}
	reflectplus.AddType("github.com/worldiety/mercurius/build", "Environment", reflect.TypeOf(build.Environment{}))
	reflectplus.AddType("github.com/worldiety/mercurius/service/sms", "SMS", reflect.TypeOf(sms.SMS{}))
	reflectplus.AddType("github.com/worldiety/mercurius/service/sms", "RestController", reflect.TypeOf(sms.RestController{}))
}

var _ = (sms.Repository)(GithubcomWorldietyMercuriusServiceSmsRepositoryProxy{})

type GithubcomWorldietyMercuriusServiceSmsRepositoryProxy struct {
	Handler reflectplus.InvocationHandler
}

func (_self GithubcomWorldietyMercuriusServiceSmsRepositoryProxy) FindAll(ctx context.Context, limit int) ([]sms.SMS, error) {
	res := _self.Handler("FindAll", ctx, limit)
	var _r0 []sms.SMS
	if res[0] != nil {
		_r0 = res[0].([]sms.SMS)
	}
	var _r1 error
	if res[1] != nil {
		_r1 = res[1].(error)
	}
	return _r0, _r1
}

func (_self GithubcomWorldietyMercuriusServiceSmsRepositoryProxy) FindById(ctx context.Context, id uuid.UUID) (sms.SMS, error) {
	res := _self.Handler("FindById", ctx, id)
	var _r0 sms.SMS
	if res[0] != nil {
		_r0 = res[0].(sms.SMS)
	}
	var _r1 error
	if res[1] != nil {
		_r1 = res[1].(error)
	}
	return _r0, _r1
}

func (_self GithubcomWorldietyMercuriusServiceSmsRepositoryProxy) Create(ctx context.Context, uuid uuid.UUID, recipient string, text string) error {
	res := _self.Handler("Create", ctx, uuid, recipient, text)
	var _r0 error
	if res[0] != nil {
		_r0 = res[0].(error)
	}
	return _r0
}

var metaData, _ = base64.StdEncoding.DecodeString("")
