// Code generated by reflectplus. DO NOT EDIT.

package mercurius

import (
	context "context"
	base64 "encoding/base64"
	reflectplus "github.com/golangee/reflectplus"
	uuid "github.com/golangee/uuid"
	build "github.com/worldiety/mercurius/build"
	application "github.com/worldiety/mercurius/internal/application"
	config "github.com/worldiety/mercurius/internal/config"
	setup "github.com/worldiety/mercurius/internal/service/setup"
	sms "github.com/worldiety/mercurius/internal/service/sms"
	reflect "reflect"
)

func init() {
	reflectplus.AddProxyFactory("github.com/worldiety/mercurius/internal/service/setup", "Reloader", func(h reflectplus.InvocationHandler) interface{} {
		return GithubcomWorldietyMercuriusInternalServiceSetupReloaderProxy{Handler: h}
	})
	reflectplus.AddProxyFactory("github.com/worldiety/mercurius/internal/service/sms", "MessageRepository", func(h reflectplus.InvocationHandler) interface{} {
		return GithubcomWorldietyMercuriusInternalServiceSmsMessageRepositoryProxy{Handler: h}
	})
	reflectplus.AddProxyFactory("github.com/worldiety/mercurius/internal/service/sms", "ProviderRepository", func(h reflectplus.InvocationHandler) interface{} {
		return GithubcomWorldietyMercuriusInternalServiceSmsProviderRepositoryProxy{Handler: h}
	})
	if _, err := reflectplus.ImportMetaData(metaData); err != nil {
		panic(err)
	}
	reflectplus.AddType("github.com/worldiety/mercurius/build", "Environment", reflect.TypeOf(build.Environment{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/application", "Server", reflect.TypeOf(application.Server{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/config", "BlobStore", reflect.TypeOf(config.BlobStore{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/config", "Settings", reflect.TypeOf(config.Settings{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/config", "Server", reflect.TypeOf(config.Server{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/config", "Logging", reflect.TypeOf(config.Logging{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/config", "FirstTimeSetupError", reflect.TypeOf(config.FirstTimeSetupError{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/config", "NoDatabaseError", reflect.TypeOf(config.NoDatabaseError{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/config", "InvalidConfigurationError", reflect.TypeOf(config.InvalidConfigurationError{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/service/setup", "Status", reflect.TypeOf(setup.Status{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/service/setup", "RestController", reflect.TypeOf(setup.RestController{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/service/sms", "SMS", reflect.TypeOf(sms.SMS{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/service/sms", "Provider", reflect.TypeOf(sms.Provider{}))
	reflectplus.AddType("github.com/worldiety/mercurius/internal/service/sms", "RestController", reflect.TypeOf(sms.RestController{}))
}

var _ = (setup.Reloader)(GithubcomWorldietyMercuriusInternalServiceSetupReloaderProxy{})

type GithubcomWorldietyMercuriusInternalServiceSetupReloaderProxy struct {
	Handler reflectplus.InvocationHandler
}

func (_self GithubcomWorldietyMercuriusInternalServiceSetupReloaderProxy) ReloadStatus() []error {
	res := _self.Handler("ReloadStatus")
	var _r0 []error
	if res[0] != nil {
		_r0 = res[0].([]error)
	}
	return _r0
}

func (_self GithubcomWorldietyMercuriusInternalServiceSetupReloaderProxy) Reload() {
	_self.Handler("Reload")

}

var _ = (sms.MessageRepository)(GithubcomWorldietyMercuriusInternalServiceSmsMessageRepositoryProxy{})

type GithubcomWorldietyMercuriusInternalServiceSmsMessageRepositoryProxy struct {
	Handler reflectplus.InvocationHandler
}

func (_self GithubcomWorldietyMercuriusInternalServiceSmsMessageRepositoryProxy) FindAll(ctx context.Context, limit int) ([]sms.SMS, error) {
	res := _self.Handler("FindAll", ctx, limit)
	var _r0 []sms.SMS
	if res[0] != nil {
		_r0 = res[0].([]sms.SMS)
	}
	var _r1 error
	if res[1] != nil {
		_r1 = res[1].(error)
	}
	return _r0, _r1
}

func (_self GithubcomWorldietyMercuriusInternalServiceSmsMessageRepositoryProxy) FindById(ctx context.Context, id uuid.UUID) (sms.SMS, error) {
	res := _self.Handler("FindById", ctx, id)
	var _r0 sms.SMS
	if res[0] != nil {
		_r0 = res[0].(sms.SMS)
	}
	var _r1 error
	if res[1] != nil {
		_r1 = res[1].(error)
	}
	return _r0, _r1
}

func (_self GithubcomWorldietyMercuriusInternalServiceSmsMessageRepositoryProxy) Create(ctx context.Context, uuid uuid.UUID, recipient string, text string) error {
	res := _self.Handler("Create", ctx, uuid, recipient, text)
	var _r0 error
	if res[0] != nil {
		_r0 = res[0].(error)
	}
	return _r0
}

var _ = (sms.ProviderRepository)(GithubcomWorldietyMercuriusInternalServiceSmsProviderRepositoryProxy{})

type GithubcomWorldietyMercuriusInternalServiceSmsProviderRepositoryProxy struct {
	Handler reflectplus.InvocationHandler
}

func (_self GithubcomWorldietyMercuriusInternalServiceSmsProviderRepositoryProxy) FindAll(ctx context.Context) ([]sms.Provider, error) {
	res := _self.Handler("FindAll", ctx)
	var _r0 []sms.Provider
	if res[0] != nil {
		_r0 = res[0].([]sms.Provider)
	}
	var _r1 error
	if res[1] != nil {
		_r1 = res[1].(error)
	}
	return _r0, _r1
}

func (_self GithubcomWorldietyMercuriusInternalServiceSmsProviderRepositoryProxy) FindById(ctx context.Context, id uuid.UUID) (sms.SMS, error) {
	res := _self.Handler("FindById", ctx, id)
	var _r0 sms.SMS
	if res[0] != nil {
		_r0 = res[0].(sms.SMS)
	}
	var _r1 error
	if res[1] != nil {
		_r1 = res[1].(error)
	}
	return _r0, _r1
}

func (_self GithubcomWorldietyMercuriusInternalServiceSmsProviderRepositoryProxy) Create(ctx context.Context, id uuid.UUID, kind sms.ProviderType) error {
	res := _self.Handler("Create", ctx, id, kind)
	var _r0 error
	if res[0] != nil {
		_r0 = res[0].(error)
	}
	return _r0
}

func (_self GithubcomWorldietyMercuriusInternalServiceSmsProviderRepositoryProxy) Update(ctx context.Context, id uuid.UUID, name string, host string, accessToken string, refreshToken string) error {
	res := _self.Handler("Update", ctx, id, name, host, accessToken, refreshToken)
	var _r0 error
	if res[0] != nil {
		_r0 = res[0].(error)
	}
	return _r0
}

func (_self GithubcomWorldietyMercuriusInternalServiceSmsProviderRepositoryProxy) Delete(ctx context.Context, id uuid.UUID) error {
	res := _self.Handler("Delete", ctx, id)
	var _r0 error
	if res[0] != nil {
		_r0 = res[0].(error)
	}
	return _r0
}

var metaData, _ = base64.StdEncoding.DecodeString("")
